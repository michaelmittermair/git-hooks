#!/bin/sh
#
# git prepare-commit-msg hook for automatically prepending an issue key
# from the start of the current branch name to commit messages.

# check if commit is merge commit
MERGE=$(cat $1|grep -i 'merge'|wc -l)

if [ $MERGE -eq 0 ] ; then 
	# getting the issue-key which has the format DEV-0000 (0000 indicates the issuenumber)
	ISSUE_KEY=`git rev-parse --abbrev-ref HEAD | sed -e 's/.*\(DEV-[0-9]*\).*/\1/'`
	
	# getting the current branchname
	BRANCH_NAME=`git rev-parse --abbrev-ref HEAD`

	if [ $? -ne 0 ]; then
		# no issue key in branch, use the default message
		exit;
	fi;

	CONTAINS_KEY=`cat $1 | egrep $ISSUE_KEY`

	# checking, if the current commit-msg contains our issue key
	if [ -z "$CONTAINS_KEY" ]; then 
	
		# issue key matched from branch prefix, prepend to commit message
		# checking if there is really a issuekey found or the whole branchname returned
		if [ $ISSUE_KEY = $BRANCH_NAME ]; then
			# the branchname returned >>  no issue key >> using the original message
			exit;
		else
			originalmessage=`cat $1`;
			echo "$originalmessage - $ISSUE_KEY" > $1;
		fi;
	fi;
fi